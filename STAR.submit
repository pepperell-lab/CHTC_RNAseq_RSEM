# Give Docker and argument and then set output, error, and log.
universe = Docker
docker_image = marissazhang/star
arguments = "$(RUN) $(REF) $(ANNOT_GTF)"
executable = STAR.sh

output = STAR_$(RUN).out
error = STAR_$(RUN).err
log = STAR_$(RUN).log

# Rules to transfer and transferring files
transfer_executable = TRUE
should_transfer_files = YES
when_to_transfer_output = ON_EXIT

staging_prefix = file:///staging/groups/pepperell_group/Mtb_RNAseq/RSEM
results_staging_prefix = file:///staging/groups/pepperell_group/Mtb_RNAseq/RSEM/Results
multiqc_staging_prefix = file:///staging/groups/pepperell_group/Mtb_RNAseq/RSEM/Results/MultiQC

transfer_input_files = STAR.sh, clear_space.py, $(results_staging_prefix)/$(RUN)_1P.fq.gz, $(results_staging_prefix)/$(RUN)_2P.fq.gz, $(staging_prefix)/$(REF), $(staging_prefix)/$(ANNOT_GTF)
transfer_output_files = $(RUN)_Aligned.toTranscriptome.out.bam
transfer_output_remaps = "$(RUN)_Aligned.toTranscriptome.out.bam = $(results_staging_prefix)/$(RUN)_Aligned.toTranscriptome.out.bam"

# Resource request and Queue job
requirements = (Target.HasCHTCStaging==TRUE)
request_cpus = 1
request_memory = 20GB
request_disk = 5GB

queue
